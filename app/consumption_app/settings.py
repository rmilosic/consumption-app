"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from django.urls import reverse

import environ
import os

def get_env_file_path():
    try:
        env = os.environ["ENVIRONMENT"]
    except BaseException:
        env = None
    
    if env == "PROD":
        return ".env.prod"
    elif env == "INT":
        return ".env.int"
    else:
        return ".env"
        
        
    
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False),
    EMAIL_HOST=(str, "localhost"),
    EMAIL_PORT=(int, 25),
    EMAIL_HOST_USER=(str, ""),
    EMAIL_HOST_PASSWORD=(str, ""),
    EMAIL_USE_TLS=(bool, False),
    EMAIL_USE_SSL=(bool, False),
    EMAIL_TIMEOUT=(any, None),
    EMAIL_SSL_KEYFILE=(any, None),
    EMAIL_SSL_CERTFILE=(any, None),
    DEFAULT_FROM_EMAIL=(str, "webmaster@localhost")
)

# Set the project base directory
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Take environment variables from .env file
ENV_FILE_PATH = get_env_file_path()
environ.Env.read_env(os.path.join(BASE_DIR, ENV_FILE_PATH))

# False if not in os.environ because of casting above
DEBUG = env('DEBUG')

# Raises Django's ImproperlyConfigured
# exception if SECRET_KEY not in os.environ
SECRET_KEY = env('SECRET_KEY')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

LOGIN_URL="backend:login"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = env('ALLOWED_HOSTS').split(",")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'backend'
]


#  TODO: set lanugage https://stackoverflow.com/questions/2336785/set-language-within-a-django-view
# TODO: debug toolbar https://django-debug-toolbar.readthedocs.io/en/latest/
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'consumption_app.urls'


SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))


TEMPLATE_DIRS = [
    os.path.join(BASE_DIR, 'templates'),
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': TEMPLATE_DIRS,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'consumption_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#    'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'OPTIONS': {
#             'service': 'my_pg_service',
#             'passfile': '.my_pgpass',
#         },
#     }
# }

DATABASES = {
   'default': env.db(),
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = env("STATIC_URL")

# STATICFILES_FINDERS = (
#     "django.contrib.staticfiles.finders.FileSystemFinder",
#     "django.contrib.staticfiles.finders.AppDirectoriesFinder",
# )

STATICFILES_DIRS = [
    BASE_DIR / "static"
]

STATIC_ROOT = env("STATIC_ROOT")


CSRF_TRUSTED_ORIGINS = env("CSRF_TRUSTED_ORIGINS").split(",")

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = env("EMAIL_BACKEND")

HOST = env("HOST")
PROTOCOL = env("PROTOCOL")

EMAIL_HOST= env("EMAIL_HOST")
EMAIL_PORT= env("EMAIL_PORT")
EMAIL_HOST_USER= env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD= env("EMAIL_HOST_PASSWORD")
EMAIL_USE_TLS= env("EMAIL_USE_TLS")
EMAIL_USE_SSL= env("EMAIL_USE_SSL")
EMAIL_TIMEOUT= env("EMAIL_TIMEOUT")
EMAIL_SSL_KEYFILE= env("EMAIL_SSL_KEYFILE")
EMAIL_SSL_CERTFILE= env("EMAIL_SSL_CERTFILE")
DEFAULT_FROM_EMAIL= env("DEFAULT_FROM_EMAIL")

# DATA_UPLOAD_MAX_MEMORY_SIZE = 100000000
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240